{"version":3,"file":"static/js/188.5a46f99b.chunk.js","mappings":"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","sources":["components/Sample.js","../../node_modules/zustand/esm/middleware.mjs","store/homeStore.js","pages/InputPage.js","pages/DisplayPage.js","pages/Home.js","App.js","reportWebVitals.js","bootstrap.js","../../node_modules/react-dom/client.js","../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js"],"sourcesContent":["import React from 'react'\r\n\r\nfunction Sample() {\r\n  return (\r\n    <h1>This Sample component is from react app without any Frameworks</h1>\r\n  )\r\n}\r\n\r\nexport default Sample","const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...a) => api.dispatch(...a), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api)\n    return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === void 0) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (e) {\n  }\n  if (!extensionConnector) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && enabled) {\n      console.warn(\n        \"[zustand devtools middleware] Please install/enable Redux devtools extension\"\n      );\n    }\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = (state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording)\n      return r;\n    const action = nameOrAction === void 0 ? { type: anonymousActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === void 0) {\n      connection == null ? void 0 : connection.send(action, get());\n      return r;\n    }\n    connection == null ? void 0 : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? void 0 : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? void 0 : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...a) => {\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...a);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === void 0) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format. \n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools)\n              return;\n            if (typeof api.dispatch !== \"function\")\n              return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === void 0) {\n              return connection == null ? void 0 : connection.init(api.getState());\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === void 0) {\n              connection == null ? void 0 : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n            if (!lastComputedState)\n              return;\n            if (store === void 0) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? void 0 : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, f) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== void 0)\n    f(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nconst combine = (initialState, create) => (...a) => Object.assign({}, initialState, create(...a));\n\nfunction createJSONStorage(getStorage, options) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2, options == null ? void 0 : options.reviver);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(\n      name,\n      JSON.stringify(newValue, options == null ? void 0 : options.replacer)\n    ),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst oldImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    getStorage: () => localStorage,\n    serialize: JSON.stringify,\n    deserialize: JSON.parse,\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage;\n  try {\n    storage = options.getStorage();\n  } catch (e) {\n  }\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const thenableSerialize = toThenable(options.serialize);\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    let errorInSync;\n    const thenable = thenableSerialize({ state, version: options.version }).then(\n      (serializedValue) => storage.setItem(options.name, serializedValue)\n    ).catch((e) => {\n      errorInSync = e;\n    });\n    if (errorInSync) {\n      throw errorInSync;\n    }\n    return thenable;\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a;\n    if (!storage)\n      return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => cb(get()));\n    const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get())) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((storageValue) => {\n      if (storageValue) {\n        return options.deserialize(storageValue);\n      }\n    }).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.getStorage) {\n        storage = newOptions.getStorage();\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  hydrate();\n  return stateFromStorage || configResult;\n};\nconst newImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  api.getInitialState = () => configResult;\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage)\n      return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persistImpl = (config, baseOptions) => {\n  if (\"getStorage\" in baseOptions || \"serialize\" in baseOptions || \"deserialize\" in baseOptions) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.\"\n      );\n    }\n    return oldImpl(config, baseOptions);\n  }\n  return newImpl(config, baseOptions);\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n","import {create} from 'zustand';\r\nimport { persist } from 'zustand/middleware';\r\n\r\nconst homeStore = create(persist((set) => ({\r\n  value: '',\r\n  setValue: (newValue) => set((state) => ({ value: newValue })),\r\n}), {\r\n  name: 'reactappZustand', \r\n  getStorage: () => localStorage, \r\n}));\r\n\r\n\r\nexport default homeStore ;\r\n","// InputPage.js\r\nimport React, { useState } from 'react';\r\nimport homeStore from '../store/homeStore';\r\n\r\nconst InputPage = () => {\r\n  const [inputValue, setInputValue] = useState('');\r\n  const setValue = homeStore(state => state.setValue);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValue(inputValue);\r\n    setInputValue('');\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={handleChange}\r\n          placeholder=\"Enter value...\"\r\n        />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputPage;\r\n","// DisplayPage.js\r\nimport React from 'react';\r\nimport homeStore from '../store/homeStore';\r\n\r\nconst DisplayPage = () => {\r\n  const value = homeStore(state => state.value);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Value from Store:</h2>\r\n      <p>{value}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayPage;\r\n","import React from 'react'\r\nimport Sample from '../components/Sample'\r\nimport InputPage from './InputPage'\r\nimport DisplayPage from './DisplayPage'\r\n\r\nfunction Home() {\r\n  return (\r\n    <>\r\n    <h1>Welcome to HomePage</h1>\r\n    <Sample />\r\n    <h3>State Management with Zustand</h3>\r\n    <InputPage />\r\n    <DisplayPage />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />   \n        </Routes> \n      </Router>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nreportWebVitals();\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n"],"names":["_jsx","children","createJSONStorage","getStorage","options","storage","e","getItem","name","_a","parse","str2","JSON","reviver","str","Promise","then","setItem","newValue","stringify","replacer","removeItem","toThenable","fn","input","result","onFulfilled","catch","_onRejected","this","_onFulfilled","onRejected","persist","persistImpl","config","baseOptions","console","warn","oldImpl","set","get","api","localStorage","serialize","deserialize","partialize","state","version","merge","persistedState","currentState","hasHydrated","hydrationListeners","Set","finishHydrationListeners","concat","arguments","thenableSerialize","errorInSync","thenable","serializedValue","savedSetState","setState","replace","configResult","stateFromStorage","hydrate","forEach","cb","postRehydrationCallback","onRehydrateStorage","call","bind","storageValue","deserializedStorageValue","migrate","error","migratedState","_a2","setOptions","newOptions","clearStorage","getOptions","rehydrate","onHydrate","add","delete","onFinishHydration","newImpl","getInitialState","_b","skipHydration","create","value","setValue","InputPage","inputValue","setInputValue","useState","homeStore","_jsxs","onSubmit","event","preventDefault","type","onChange","target","placeholder","DisplayPage","_Fragment","Sample","Router","Routes","Route","path","element","Home","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","render","React","App","reportWebVitals","m","require","exports","createRoot","hydrateRoot","f","k","Symbol","for","l","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","h","defaultProps","$$typeof","props","_owner","current","Fragment","jsx","jsxs","module"],"sourceRoot":""}